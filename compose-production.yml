version: '3.9'
# Networks defining
networks:
  traefik-public:
    external: true
volumes:
  traefik-public-certs:
# Services
services:
  traefik:
    image: traefik:2.9
    command:
      --providers.docker=true
      --providers.docker.watch=true
      --providers.docker.swarmmode=true
      --providers.docker.exposedbydefault=false
      --entrypoints.http.address=:80
      --entryPoints.https.address=:443
      --certificatesresolvers.letsEncrypt.acme.httpChallenge=true
      --certificatesresolvers.letsEncrypt.acme.httpChallenge.entryPoint=http
      --certificatesresolvers.letsEncrypt.acme.email=certs@koreshkov.com
      --certificatesresolvers.letsEncrypt.acme.storage=/certs/acme.json
    ports:
        - target: 80
          published: 80
          protocol: tcp
          mode: host
        - target: 443
          published: 443
          protocol: tcp
          mode: host
    networks:
      - traefik-public
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik-public-certs:/certs
    deploy:
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public

        - traefik.http.services.traefik.loadbalancer.server.port=80
        - traefik.http.routers.http-catchall.rule=HostRegexp(`{host:.+}`)
        - traefik.http.routers.http-catchall.entryPoints=http
        - traefik.http.routers.http-catchall.middlewares=redirect-to-https

        - traefik.http.middlewares.redirect-to-https.redirectScheme.scheme=https
        - traefik.http.middlewares.redirect-to-https.redirectScheme.permanent=true

        - traefik.http.middlewares.secure-headers.headers.sslRedirect=true
        - traefik.http.middlewares.secure-headers.headers.stsSeconds=31536000
        - traefik.http.middlewares.secure-headers.headers.contentSecurityPolicy=block-all-mixed-content
      placement:
        constraints: [ node.role == manager ]
